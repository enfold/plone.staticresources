"use strict";(self.webpackChunkplone_staticresources=self.webpackChunkplone_staticresources||[]).push([[48026],{87705:function(n,o,e){var t=e(87537),a=e.n(t),r=e(23645),i=e.n(r)()(a());i.push([n.id,"body.plone-toolbar-left{padding-left:2rem}body.plone-toolbar-left .offcanvas-pin,body.plone-toolbar-left .offcanvas-unpin{display:none}@media(min-width: 768px){body.plone-toolbar-left .offcanvas-pin{display:block}body.plone-toolbar-left.plone-toolbar-left-expanded{padding-left:220px}body.plone-toolbar-left.plone-toolbar-left-expanded .offcanvas-dismiss,body.plone-toolbar-left.plone-toolbar-left-expanded .offcanvas-pin,body.plone-toolbar-left.plone-toolbar-left-expanded .offcanvas-toggler{display:none}body.plone-toolbar-left.plone-toolbar-left-expanded .offcanvas-unpin{display:block}body.plone-toolbar-left.plone-toolbar-left-expanded #edit-zone{visibility:visible !important;transform:none;transition:none}}.offcanvas-toggler{width:2rem;position:fixed;top:0;left:0;border-right:solid 1px #777}.offcanvas-toggler.bg-dark{background-color:rgba(0,0,0,.9)}.offcanvas-toggler .toggler-header{background-color:#007bb3;padding:.5rem}.offcanvas-toggler .toggler-header a{color:rgba(255,255,255,.9)}#edit-zone{width:220px;z-index:20;border-right:solid 1px #777;overflow-y:auto}#edit-zone .nav-link{border-radius:0;color:var(--bs-body-color)}#edit-zone .nav-link.locked{color:#ffc107 !important}#edit-zone .nav-link.dropdown-toggle{padding-bottom:.25rem}#edit-zone .collapse .nav-link,#edit-zone .collapsing .nav-link{padding:.25rem 1rem}#edit-zone .border-top{border-top-color:rgba(51,51,51,.17)}#edit-zone.bg-dark{color:rgba(255,255,255,.9);background-color:rgba(0,0,0,.9);border-right:none}#edit-zone.bg-dark .border-top{border-top-color:rgba(255,255,255,.17)}#edit-zone.bg-dark .nav-link{color:#fff}#edit-zone.bg-dark .nav-link:focus{background:#007bb3}#edit-zone.bg-dark .nav-link:hover{background:#007bb3;color:#fff}#edit-zone.bg-dark .nav-link:hover .label-state-published,#edit-zone.bg-dark .nav-link:hover .label-state-external{color:#009ee6 !important}#edit-zone .offcanvas-header{background-color:#007bb3;padding:.5rem 1rem}#edit-zone .label-state-published,#edit-zone .label-state-external{color:#007bb3 !important}#edit-zone .label-state-internally_published{color:#883dfa !important}#edit-zone .label-state-pending{color:#e2e721 !important}#edit-zone li.active .label-state-pending,#edit-zone .label-state-pending:hover{color:rgba(255,255,255,.9) !important}#edit-zone .label-state-draft,#edit-zone .label-state-internal{color:#fab82a !important}#edit-zone .label-state-private{color:#c4183c !important}","",{version:3,sources:["webpack://./../mockup/src/pat/toolbar/pattern.toolbar.scss","webpack://./../mockup/src/pat/toolbar/variables.scss","webpack://./../mockup/node_modules/bootstrap/scss/mixins/_breakpoints.scss"],names:[],mappings:"AAKA,wBACI,iBCqB4B,CDnB5B,gFAEI,YAAA,CEqDJ,yBFjDI,uCACI,aAAA,CAGJ,oDASI,kBCDU,CDPV,iNAGI,YAAA,CAEJ,qEACI,aAAA,CAGJ,+DAEI,6BAAA,CACA,cAAA,CACA,eAAA,CAAA,CAQhB,mBACI,UCd4B,CDe5B,cAAA,CACA,KAAA,CACA,MAAA,CACA,2BAAA,CAEA,2BACI,+BCvCW,CD0Cf,mCACI,wBC/CW,CDgDX,aAAA,CACA,qCACI,0BCxCe,CD6C3B,WAEI,WCpCkB,CDqClB,UAAA,CACA,2BAAA,CACA,eAAA,CAEA,qBACI,eAAA,CACA,0BAAA,CAEA,4BACI,wBAAA,CAGJ,qCACI,qBAAA,CAKJ,gEACI,mBAAA,CAIR,uBACI,mCAAA,CAGJ,mBACI,0BC5EmB,CD6EnB,+BCnFW,CDoFX,iBAAA,CAEA,+BACI,sCCnFoB,CDsFxB,6BACI,UAAA,CACA,mCACI,kBCjGG,CDmGP,mCACI,kBCpGG,CDqGH,UAAA,CACA,mHAEI,wBAAA,CAKhB,6BACI,wBC9GW,CD+GX,kBAAA,CAGJ,mEAEI,wBAAA,CAGJ,6CACI,wBAAA,CAGJ,gCACI,wBAAA,CAGJ,gFAEI,qCAAA,CAGJ,+DAEI,wBAAA,CAGJ,gCACI,wBAAA",sourcesContent:['//*// TOOLBAR EDIT ZONE PLONE //*//\n\n// might get overridden later by plone registry stored variables!\n@import "variables.scss";\n\nbody.plone-toolbar-left {\n    padding-left:$plone-toolbar-width-collapsed;\n\n    .offcanvas-pin,\n    .offcanvas-unpin {\n        display:none;\n    }\n\n    @include media-breakpoint-up(md) {\n        .offcanvas-pin {\n            display:block;\n        }\n\n        &.plone-toolbar-left-expanded {\n            .offcanvas-dismiss,\n            .offcanvas-pin,\n            .offcanvas-toggler {\n                display:none;\n            }\n            .offcanvas-unpin {\n                display:block;\n            }\n            padding-left:$plone-toolbar-width;\n            #edit-zone {\n                // show offcanvas always if expanded\n                visibility:visible !important;\n                transform:none;\n                transition:none;\n            }\n        }\n    }\n\n}\n\n\n.offcanvas-toggler {\n    width:$plone-toolbar-width-collapsed;\n    position:fixed;\n    top:0;\n    left:0;\n    border-right:solid 1px $plone-gray-light;\n\n    &.bg-dark {\n        background-color:$plone-toolbar-bg;\n    }\n\n    .toggler-header {\n        background-color:$plone-toolbar-link;\n        padding:calc($spacer * .5);\n        a {\n            color:$plone-toolbar-text-color;\n        }\n    }\n}\n\n#edit-zone {\n    // font-family: $plone-toolbar-font-primary;\n    width: $plone-toolbar-width;\n    z-index: 20;\n    border-right:solid 1px $plone-gray-light;\n    overflow-y: auto;\n\n    .nav-link {\n        border-radius:0;\n        color:var(--bs-body-color);\n\n        &.locked {\n            color:$plone-toolbar-locked-color !important;\n        }\n\n        &.dropdown-toggle {\n            padding-bottom:0.25rem;\n        }\n    }\n\n    .collapse, .collapsing {\n        .nav-link {\n            padding:0.25rem 1rem;\n        }\n    }\n\n    .border-top {\n        border-top-color:darken($plone-toolbar-separator-color, 80%);\n    }\n\n    &.bg-dark {\n        color:$plone-toolbar-text-color;\n        background-color:$plone-toolbar-bg;\n        border-right:none;\n\n        .border-top {\n            border-top-color: $plone-toolbar-separator-color;\n        }\n\n        .nav-link {\n            color: color-contrast($plone-toolbar-link);\n            &:focus {\n                background: $plone-toolbar-link;\n            }\n            &:hover {\n                background: $plone-toolbar-link;\n                color: color-contrast($plone-toolbar-link);\n                .label-state-published,\n                .label-state-external {\n                    color: lighten($plone-link-color, 10%) !important;\n                }\n            }\n        }\n    }\n    .offcanvas-header {\n        background-color:$plone-toolbar-link;\n        padding:calc($spacer * .5) $spacer;\n    }\n\n    .label-state-published,\n    .label-state-external {\n        color: $plone-toolbar-published-color !important;\n    }\n\n    .label-state-internally_published {\n        color: $plone-toolbar-internally-published-color !important;\n    }\n\n    .label-state-pending {\n        color: $plone-toolbar-pending-color !important;\n    }\n\n    li.active .label-state-pending,\n    .label-state-pending:hover {\n        color: $plone-toolbar-text-color !important;\n    } //contrast\n\n    .label-state-draft,\n    .label-state-internal {\n        color: $plone-toolbar-draft-color !important;\n    }\n\n    .label-state-private {\n        color: $plone-toolbar-private-color !important;\n    }\n}\n','@import "~bootstrap/scss/mixins";\n@import "~bootstrap/scss/functions";\n@import "~bootstrap/scss/variables";\n\n$plone-gray-light: lighten(#000, 46.5%);\n$plone-link-color: #007bb3; //plone blue\n$plone-gray-lighter: lighten(#000, 80%); // #ccc //disableds like\n\n//*// TOOLBAR\n$plone-toolbar-bg: rgba(0, 0, 0, 0.9);\n$plone-toolbar-submenu-bg: rgba(20, 20, 20, 0.95);\n$plone-toolbar-font-primary: "Roboto Condensed", sans-serif;\n$plone-toolbar-font-secondary: "Roboto", sans-serif;\n$plone-toolbar-separator-color: rgba(255, 255, 255, 0.17);\n$plone-toolbar-link: $plone-link-color;\n$plone-toolbar-text-color: rgba(255, 255, 255, 0.9);\n$plone-toolbar-submenu-text-color: #fff;\n$plone-toolbar-submenu-header-color: lighten(#000, 80%);\n$plone-toolbar-published-color: $plone-link-color; // published and external same color\n$plone-toolbar-draft-color: #fab82a; // lime-yellow //draft is visible\n$plone-toolbar-pending-color: #e2e721; // orange\n$plone-toolbar-private-color: #c4183c; // red\n$plone-toolbar-internal-color: #fab82a; // is draft\n$plone-toolbar-internally-published-color: #883dfa; // is intranet\n$plone-toolbar-locked-color: $warning; // is intranet\n\n$plone-toolbar-width: 220px;\n$plone-toolbar-width-collapsed: calc($spacer * 2);\n','// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error "breakpoint `#{$name}` not found in `#{$breakpoints}`";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    ""  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    "-sm"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint\'s minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n'],sourceRoot:""}]),o.Z=i},23645:function(n){n.exports=function(n){var o=[];return o.toString=function(){return this.map((function(o){var e="",t=void 0!==o[5];return o[4]&&(e+="@supports (".concat(o[4],") {")),o[2]&&(e+="@media ".concat(o[2]," {")),t&&(e+="@layer".concat(o[5].length>0?" ".concat(o[5]):""," {")),e+=n(o),t&&(e+="}"),o[2]&&(e+="}"),o[4]&&(e+="}"),e})).join("")},o.i=function(n,e,t,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var l=0;l<this.length;l++){var p=this[l][0];null!=p&&(i[p]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);t&&i[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),o.push(d))}},o}},87537:function(n){n.exports=function(n){var o=n[1],e=n[3];if(!e)return o;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),r="/*# ".concat(a," */"),i=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[o].concat(i).concat([r]).join("\n")}return[o].join("\n")}},48026:function(n,o,e){e.r(o);var t=e(93379),a=e.n(t),r=e(7795),i=e.n(r),l=e(3565),p=e.n(l),s=e(19216),d=e.n(s),b=e(44589),c=e.n(b),m=e(87705),f={};f.styleTagTransform=c(),f.setAttributes=p(),f.insert=function(n){var o=document.head.querySelectorAll("*")[0];o?document.head.insertBefore(n,o):document.head.append(n)},f.domAPI=i(),f.insertStyleElement=d();a()(m.Z,f);o.default=m.Z&&m.Z.locals?m.Z.locals:void 0},93379:function(n){var o=[];function e(n){for(var e=-1,t=0;t<o.length;t++)if(o[t].identifier===n){e=t;break}return e}function t(n,t){for(var r={},i=[],l=0;l<n.length;l++){var p=n[l],s=t.base?p[0]+t.base:p[0],d=r[s]||0,b="".concat(s," ").concat(d);r[s]=d+1;var c=e(b),m={css:p[1],media:p[2],sourceMap:p[3],supports:p[4],layer:p[5]};if(-1!==c)o[c].references++,o[c].updater(m);else{var f=a(m,t);t.byIndex=l,o.splice(l,0,{identifier:b,updater:f,references:1})}i.push(b)}return i}function a(n,o){var e=o.domAPI(o);e.update(n);return function(o){if(o){if(o.css===n.css&&o.media===n.media&&o.sourceMap===n.sourceMap&&o.supports===n.supports&&o.layer===n.layer)return;e.update(n=o)}else e.remove()}}n.exports=function(n,a){var r=t(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<r.length;i++){var l=e(r[i]);o[l].references--}for(var p=t(n,a),s=0;s<r.length;s++){var d=e(r[s]);0===o[d].references&&(o[d].updater(),o.splice(d,1))}r=p}}},19216:function(n){n.exports=function(n){var o=document.createElement("style");return n.setAttributes(o,n.attributes),n.insert(o,n.options),o}},3565:function(n,o,e){n.exports=function(n){var o=e.nc;o&&n.setAttribute("nonce",o)}},7795:function(n){n.exports=function(n){var o=n.insertStyleElement(n);return{update:function(e){!function(n,o,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var a=void 0!==e.layer;a&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,a&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var r=e.sourceMap;r&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),o.styleTagTransform(t,n,o.options)}(o,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(o)}}}},44589:function(n){n.exports=function(n,o){if(o.styleSheet)o.styleSheet.cssText=n;else{for(;o.firstChild;)o.removeChild(o.firstChild);o.appendChild(document.createTextNode(n))}}}}]);
//# sourceMappingURL=48026.3a4c559730c2805fcc23.min.js.map